---
import Layout from "../layouts/Layout.astro";
import TapsContainer from "../components/TapsContainer.astro";
import { API_BASE_URL, SUPPORTED_LANGS, MAIN_LANG, LANG_STRINGS, filterTapsByBarId, toBarPath } from "../utils/g";

export async function getStaticPaths() {
    const barsRes = await fetch(`${API_BASE_URL}/api/v1/bars`);
    const bars = await barsRes.json();

    const tapsRes = await fetch(`${API_BASE_URL}/api/v1/taps?limit=-1`);
    const taps = await tapsRes.json();

    const paths = [];

    // Genarate bar-path for each supported language
    SUPPORTED_LANGS.forEach((lang) => {
        bars.forEach((bar) => {
            const path = lang != MAIN_LANG ? `${lang}/${toBarPath(bar)}` : toBarPath(bar);

            paths.push({
                params: { path },
                props: { bar, lang, taps: filterTapsByBarId(taps, bar.bar_id) },
            });
        });
    });

    return paths;
}

const { bar, taps, lang } = Astro.props;
const strs = LANG_STRINGS[lang] // Object with lang strings
---
<Layout title={`${bar.bar_name} | ${bar.bar_city}`} lang={lang}>

    <section aria-label={bar.bar_name}>
        <h1>{bar.bar_name}</h1>
        <address>
            {bar.bar_street}
            <br />
            {bar.bar_zip_code}
            {bar.bar_city}
        </address>
    </section>

    <section aria-label={strs.beers}>
        <h2>{strs.beers}</h2>
        <TapsContainer taps={taps} lang={lang} strs={strs}/>
    </section>

</Layout>
